{"file":"FolderContent-B4CB10x4.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,UAAM,QAAQ,IAAI,EAAE;AACpB,UAAM,cAAc,IAAI,CAAA,CAAE;AAG1B,UAAM,QAAQ,SAAU;AACxB,UAAM,cAAc,MAAM,KAAK,QAAQ,OAAO,EAAE;AAGrB,IAAM,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA;AAAA,MAAa;AAAA,MAAW,MACvD,aAAa,WAAW,EAAE,KAAK,EAAE,UAAU,EAAG,CAAA,EAAE,KAAI;AAAA,IACtD,CAAA;AAaA,UAAM,cAAc,CAAC,UAAU;AAC7B,kBAAY,MAAM,KAAK,IAAI;AAAA,IAC7B;AAEA,UAAM,eAAe,CAAC,UAAU;AAC9B,cAAQ,MAAM,gCAAgC,KAAK,EAAE;AAAA,IACvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["_withAsyncContext"],"sources":["../../../../components/global/FolderContent.vue"],"sourcesContent":["<template>\n  <div class=\"mt-5\" v-if=\"items.folder !== 'page'\">\n    <MasonryWall :items=\"items\" :ssr-columns=\"1\" :gap=\"16\">\n      <template #default=\"{ item, index }\">\n        <div\n          :style=\"{ height: `${item}px` }\"\n          class=\"masonry-item\"\n        >\n          <div class=\"masonry-image relative\">\n            <div v-if=\"!imageLoaded[index]\" class=\"absolute inset-0 flex items-center justify-center bg-gray-200\">\n              <p>Loading image...</p> <!-- Loader text -->\n            </div>\n            <NuxtImg\n              :src=\"item.thumbnail\"\n              alt=\"Post thumbnail\"\n              class=\"rounded-md mb-4\"\n              @load=\"onImageLoad(index)\"\n              @error=\"onImageError(index)\"\n              :class=\"{ 'hidden': !imageLoaded[index] }\"\n            />\n          </div>\n          <div class=\"masonry-item-text p-4\">\n            <NuxtLink :to=\"item._path\" class=\"text-xl font-semibold mb-2\">\n              {{ item.title }}\n            </NuxtLink>\n            <p v-if=\"item.description\" class=\"text-gray-600 line-clamp-3\">{{ item.description }}</p>\n            <ul v-if=\"item.tags\" class=\"text-xs mt-2\">\n              <li v-for=\"(tag, index) in item.tags\" :key=\"index\" class=\"inline mr-2\">\n                <NuxtLink :to=\"`/tags/${tag}`\">{{ tag }}</NuxtLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </template>    \n    </MasonryWall>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { useAsyncData, useRoute } from '#app';\nimport MasonryWall from '@yeger/vue-masonry-wall';\n\nconst items = ref([]);\nconst imageLoaded = ref([]); // Store loading state for each image\n\n// Get the current route\nconst route = useRoute();\nconst currentPath = route.path.replace(/\\/$/, ''); // Normalize the path by removing trailing slashes\n\n// Fetch all posts from both /folders and /page\nconst { data: allPosts } = await useAsyncData('folders', () =>\n  queryContent(currentPath).sort({ promoted: 1 }).find()\n);\n\n// Filter the data to include only directories (folders)\nonMounted(() => {\n  if (allPosts.value) {\n    items.value = allPosts.value.filter(\n      (post) => post.folder && post.folder === 'page' && post.folder !== 'folder'\n    );\n    imageLoaded.value = Array(items.value.length).fill(false); // Initialize imageLoaded state\n  }\n});\n\n// Functions to handle image load and error\nconst onImageLoad = (index) => {\n  imageLoaded.value[index] = true; // Mark image as loaded\n};\n\nconst onImageError = (index) => {\n  console.error(`Error loading image at index ${index}`); // Handle image error\n};\n</script>\n"],"version":3}