{"version":3,"file":"PromotedContent-BCB9_8lx.js","sources":["../../../../components/global/PromotedContent.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted } from 'vue';\nimport { useAsyncData } from '#app';\nimport MasonryWall from '@yeger/vue-masonry-wall';\n\n// Define a ref for storing folders and loading state\nconst folders = ref([]);\n\n// Fetch all posts from both /folders and /page\nconst { data: allPosts } = await useAsyncData('folders', () =>\n  queryContent('/')\n    .sort({ promoted: 1 })\n    .find()\n);\n\n// Filter the data to include only directories (folders)\nonMounted(() => {\n  if (allPosts.value) {\n    folders.value = allPosts.value.filter(item => item.folder);\n  }\n});\n\n// Define the reactive state for items\nconst items = folders;\n\n// Define loading states for each image\nconst loadingImages = ref({});\n\nfunction handleImageLoad(index) {\n  loadingImages.value[index] = false;  // Mark image as loaded\n}\n\nfunction handleImageError(index) {\n  loadingImages.value[index] = 'error';  // Mark image as errored\n}\n</script>\n\n<template>\n  <div>\n    <div class=\"container animate-fade animate-once animate-delay-[500ms] mt-10 mb-20\">     \n      <MasonryWall :items=\"items\" :ssr-columns=\"1\" :gap=\"16\" class=\"mt-5\">\n        <template #default=\"{ item, index }\">\n          <div\n            :style=\"{ height: `${item}px` }\"\n            class=\"masonry-item\"\n          >\n            <div class=\"masonry-image relative\">\n              <!-- Show loader if the image is still loading -->\n              <div\n                v-if=\"loadingImages[index] !== false\"\n                class=\"absolute inset-0 flex items-center justify-center bg-gray-200 rounded-md\"\n              >\n                <p v-if=\"loadingImages[index] !== 'error'\">Loading image...</p>\n                <p v-else class=\"text-red-500\">Error loading image</p>\n              </div>\n\n              <!-- Image with lazy loading and events to handle loading state -->\n              <NuxtImg\n                :src=\"item.thumbnail\"\n                alt=\"Post thumbnail\"\n                class=\"rounded-md mb-4\"\n                loading=\"lazy\"\n                @load=\"handleImageLoad(index)\"\n                @error=\"handleImageError(index)\"\n              />\n            </div>\n\n            <NuxtLink :to=\"item._path\" class=\"block\">\n              <div class=\"masonry-item-text p-4\">\n                <h2 class=\"text-xl font-semibold mb-2\">{{ item.title }}</h2>\n                <p v-if=\"item.description\" class=\"text-gray-600 line-clamp-3\">{{ item.description }}</p>\n                <ClientOnly>\n                  <ul v-if=\"item.tags\" class=\"text-xs mt-2\">\n                    <li v-for=\"(tag, tagIndex) in item.tags\" :key=\"tagIndex\" class=\"inline mr-2\">\n                      <NuxtLink :to=\"`/tags/${tag}`\">{{ tag }}</NuxtLink>\n                    </li>\n                  </ul>\n                </ClientOnly>\n              </div>\n            </NuxtLink>\n          </div>\n        </template>\n      </MasonryWall>\n    </div>\n  </div>  \n</template>\n"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,UAAM,UAAU,IAAI,CAAA,CAAE;AAGK,IAAA,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM;AAAA,MAAa;AAAA,MAAW,MACvD,aAAa,GAAG,EACb,KAAK,EAAE,UAAU,GAAG,EACpB,KAAK;AAAA,IACV,CAAA;AAUA,UAAM,QAAQ;AAGd,UAAM,gBAAgB,IAAI,CAAA,CAAE;AAE5B,aAAS,gBAAgB,OAAO;AAC9B,oBAAc,MAAM,KAAK,IAAI;AAAA,IAC/B;AAEA,aAAS,iBAAiB,OAAO;AAC/B,oBAAc,MAAM,KAAK,IAAI;AAAA,IAC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}