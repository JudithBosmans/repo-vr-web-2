{"file":"index-DfBkvTc2.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQe,cAAU;AACA,QAAI,IAAI;AACT,QAAI,IAAI;AAE1B,UAAA,YAAY,IAAI,IAAI;AACpB,UAAA,WAAW,IAAI,KAAK;AAC1B,UAAM,YAAY;AAElB,UAAM,YAAY;AAAA,MAAS,MACzB,UAAU,eAAe,SAAS,wBAAwB;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../pages/index.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted } from \"vue\";\nimport Rellax from \"rellax\";\nimport Floating from \"./Floating.vue\";\nimport Flower from \"./Flower.vue\";\nimport About from \"./About.vue\";\nimport ColorMode from \"~/components/ColorMode.vue\";\n\nconst router = useRouter();\nconst homepageSettings = ref(null); // For homepage.json data\nconst generalSettings = ref(null); // For settings.json data\n\nconst isLoading = ref(true); // Loading state\nconst hasError = ref(false); // Error stateconst\nconst colorMode = useColorMode();\n\nconst modelPath = computed(() =>\n  colorMode.preference === \"dark\" ? \"/assets/flower4.glb\" : \"/assets/straw.glb\"\n);\n\nonMounted(async () => {\n  const rellax = new Rellax(\".rellax\");\n\n  try {\n    // Fetch homepage.json\n    const homepageResponse = await fetch(\"/_data/homepage.json\");\n    if (!homepageResponse.ok) {\n      throw new Error(\n        `Homepage settings error! status: ${homepageResponse.status}`\n      );\n    }\n    const homepageData = await homepageResponse.json();\n    homepageSettings.value = homepageData;\n\n    // Fetch settings.json\n    const settingsResponse = await fetch(\"/_data/settings.json\");\n    if (!settingsResponse.ok) {\n      throw new Error(\n        `General settings error! status: ${settingsResponse.status}`\n      );\n    }\n    generalSettings.value = await settingsResponse.json();\n\n    // Handle redirection\n    // if (homepageSettings.value.homepageredirect) {\n    //   const redirectPath = `/page/${homepageSettings.value.homepageredirect}`;\n    //   router.push(redirectPath);\n    // }\n\n    // Scroll to section if hash is present\n    if (window.location.hash === \"#about\") {\n      const aboutSection = document.getElementById(\"about\");\n      if (aboutSection) {\n        aboutSection.scrollIntoView({ behavior: \"smooth\" });\n      }\n    }\n\n    isLoading.value = false; // Stop loading when both files are fetched\n  } catch (error) {\n    hasError.value = true; // Show error message if fetching fails\n    console.error(\"Error loading settings:\", error);\n  }\n});\n</script>\n\n<template>\n  <div>\n    <!-- Loading state -->\n    <div v-if=\"isLoading\" class=\"flex items-center justify-center h-screen\">\n      <p>Loading...</p>\n    </div>\n\n    <!-- Error state -->\n    <div v-else-if=\"hasError\" class=\"flex items-center justify-center h-screen\">\n      <p>Error loading settings. Please try again later.</p>\n    </div>\n\n    <!-- Main content -->\n    <div v-else class=\"h-screen relative\">\n      <!-- Background container -->\n      <div class=\"relative h-full\">\n        <!-- Background image -->\n        <!-- <div\n          class=\"absolute inset-0 bg-cover bg-center titleText\"\n          :style=\"{\n            backgroundImage: `url('https://i.postimg.cc/xT3K8XBQ/0e7b977432d607551bacf2ef112afa45.jpg')`,\n          }\"\n        ></div> -->\n\n        <div class=\"relative z-10 pr-5 bg-transparent\">\n          <Drawer />\n        </div>\n\n        <!-- Info section -->\n        <div\n          class=\"info flex flex-col items-center justify-center h-screen relative\"\n        >\n          <div class=\"text-left p-1 titleText\">\n            <div id=\"titleHome\" class=\"titleText\">\n              <h2\n                class=\"absolute top-[65%] left-[50%] translate-Y-[-30%] translate-x-[-50%] z-10000\"\n              >\n                <span class=\"text-[32vw]\">Judith</span> <br />\n                <span class=\"text-[10vw]\">Bosmans</span>\n              </h2>\n            </div>\n\n            <Floating\n              :ColorMode=\"ColorMode.preference\"\n              :modelPath=\"modelPath\"\n            />\n            <!-- <Flower class=\"z-100000\" /> -->\n            <About id=\"about\" class=\"w-[100vw] absolute top-[100vh] left-0\" />\n          </div>\n        </div>\n        <div class=\"w-[50%]\">\n          <p class=\"bodyText ml-[2vw] mt-[4vh]\">\n            Lorem ipsum dolor sit amet. Qui modi illum ab quod optio est\n            exercitationem aliquid et consequatur quibusdam sed sint ipsa. Sed\n            consequuntur repellendus vel perferendis rerum ad officia architecto\n            aut quos nostrum sed accusantium repellat. Sit facilis fuga qui\n            officiis laborum non fuga quasi? Aut officia illum aut voluptas\n            doloribus eos voluptatum fugiat aut facilis sint et modi vitae.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n"],"version":3}